name: Release Web-Frontend
on:
  # Trigger when a new release is published
  release:
    types: [published]
    
jobs:
  set_version_number:
    name: Set Version Number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set release_env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Replace Version in package.json
        id: repl-package-version
        uses: jaywcjlove/github-action-package@main
        with:
          version: ${{ env.RELEASE_VERSION }}
      - name: Commit and Push Changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: 'Set Release Version to latest release'
  deploy:
    name: Deploy new Version to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: set_version_number
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run generate --if-present
      - name: Publish to CLoudflare Pages (BETA)
        uses: cloudflare/pages-action@v1
        if: "github.event.release.prerelease"
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ruehrstaat-beta
          directory: .output/public
      - name: Publish to CLoudflare Pages (RELEASE)
        uses: cloudflare/pages-action@v1
        if: "!github.event.release.prerelease"
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ruehrstaat-beta
          directory: .output/public
      
