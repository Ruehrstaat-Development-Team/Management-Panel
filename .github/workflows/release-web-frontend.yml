name: Release Web-Frontend
on:
  # Trigger when a new release is published
  release:
    types: [published]
    
jobs:
  set_version_number:
    name: Set Version Number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set release_env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Replace Version in package.json
        id: repl-package-version
        uses: jaywcjlove/github-action-package@main
        with:
          version: ${{ env.RELEASE_VERSION }}
      - name: Commit and Push Changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: 'Set Release Version to latest release'
  deploy:
    name: Deploy to Cloudflare via merge to release branch
    runs-on: ubuntu-latest
    needs: set_version_number
    steps:
      - uses: actions/checkout@v4
      - name: Merge main -> beta-ci
        uses: devmasx/merge-branch@master
        if: "github.event.release.prerelease"
        with:
          type: now
          from_branch: main
          target_branch: beta-ci
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge main -> release-ci
        uses: devmasx/merge-branch@master
        if: "!github.event.release.prerelease"
        with:
          type: now
          from_branch: main
          target_branch: release-ci
          github_token: ${{ secrets.GITHUB_TOKEN }}
  notify-sentry:
    name: Notifiy Sentry
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set release_env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Create Sentry Release (BETA)
        uses: getsentry/action-release@v1
        if: "github.event.release.prerelease"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
        with:
          environment: beta
          version: ${{ env.RELEASE_VERSION }}
      - name: Create Sentry Release (RELEASE)
        uses: getsentry/action-release@v1
        if: "!github.event.release.prerelease"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
        with:
          environment: production
          version: ${{ env.RELEASE_VERSION }}
